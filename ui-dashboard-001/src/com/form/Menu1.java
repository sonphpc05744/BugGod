/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.form;

import com.Dao.sanPhamDao;
import com.component.Item;
import com.dao.HoaDonDAO;
import com.event.EventItem;
import com.model.HoaDon;
import com.model.SanPham;
import com.swing.ScrollBar;
import java.awt.Color;
import java.awt.Component;
import java.awt.Point;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Date;
import java.util.List;
import javax.swing.AbstractCellEditor;
import javax.swing.DefaultCellEditor;
import javax.swing.JSpinner;
import javax.swing.JTable;
import javax.swing.SpinnerNumberModel;
import javax.swing.SwingUtilities;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;
import javax.swing.event.TableModelEvent;
import javax.swing.event.TableModelListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellEditor;
import javax.swing.table.TableCellRenderer;

/**
 *
 * @author HP
 */
public class Menu1 extends javax.swing.JPanel {

    DefaultTableModel model, modelHD;
    HoaDonDAO hddao = new HoaDonDAO();
    List<HoaDon> listHD = new ArrayList();
    DefaultCellEditor cellEditor;
    List<SanPham> listSP = new ArrayList<>();
    List<Integer> listrow = new ArrayList<>();
    List<String> listMaSP = new ArrayList<>();
    sanPhamDao SPDao = new sanPhamDao();
    private SanPham itemSelected;
    List<Double> listGia = new ArrayList();
    int row = -1;
    private JSpinner spinner;
    private int newValue = 0;
    private boolean taoHD = false;
    private String ngayTaoHD = "";

    DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm:ss");

    /**
     * Creates new form Menu1
     */
    public Menu1() {
        initComponents();
        scroll1.setVerticalScrollBar(new ScrollBar());
        init();
        loadData();

    }

    public void setEvent(EventItem event) {
        this.event = event;
    }

    private EventItem event;

    public void addItem(SanPham data) {
        Item item = new Item();
        item.setData(data);
        item.addMouseListener(new MouseAdapter() {
            @Override
            public void mousePressed(MouseEvent me) {
                if (SwingUtilities.isLeftMouseButton(me)) {
                    event.itemClick(item, data);
                }
            }
        });
        panelItem1.add(item);
        panelItem1.repaint();
        panelItem1.revalidate();
    }

    public void setSelected(Component item) {
        for (Component com : panelItem1.getComponents()) {
            Item i = (Item) com;
            if (i.isSelected()) {
                i.setSelected(false);
            }
        }
        ((Item) item).setSelected(true);
    }

//    public void showItem(ModelItem data) {
//        lbItemName.setText(data.getItemName());
//        txtDescription.setText(data.getDescription());
//        lbBrand.setText(data.getBrandName());
//        DecimalFormat df = new DecimalFormat("$#,##0.00");
//        lbPrice.setText(df.format(data.getPrice()));
//    }
    public Point getPanelItemLocation() {
        Point p = scroll1.getLocation();
        return new Point(p.x, p.y - scroll1.getViewport().getViewPosition().y);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenu1 = new javax.swing.JPopupMenu();
        mnuPopXoa = new javax.swing.JMenuItem();
        mnuPopRemoveAll = new javax.swing.JMenuItem();
        jPanel5 = new javax.swing.JPanel();
        scroll1 = new javax.swing.JScrollPane();
        panelItem1 = new com.swing.PanelItem();
        jPanel6 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        txtSearh = new javax.swing.JTextField();
        cboLoaiSP = new javax.swing.JComboBox<>();
        jLabel14 = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tblHoaDon = new javax.swing.JTable();
        jLabel16 = new javax.swing.JLabel();
        txtTienSP = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        txtChiPhiKhac = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        txtTienNhan = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        txtTienThua = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        rdoTienMat = new javax.swing.JRadioButton();
        rdoChuyenKhoang = new javax.swing.JRadioButton();
        jLabel21 = new javax.swing.JLabel();
        lblTrangThai = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        txtGhiChu = new javax.swing.JTextArea();
        jButton6 = new javax.swing.JButton();
        btnInHoaDon = new javax.swing.JButton();
        btnThanhToan = new javax.swing.JButton();
        jLabel15 = new javax.swing.JLabel();
        lblTongTien = new javax.swing.JLabel();
        lblThongBaoPhi = new javax.swing.JLabel();
        lblThongBaoTienNhan = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        tblHoaDonCho = new javax.swing.JTable();
        jLabel24 = new javax.swing.JLabel();
        jPanel9 = new javax.swing.JPanel();

        mnuPopXoa.setText("jMenuItem1");
        mnuPopXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuPopXoaActionPerformed(evt);
            }
        });
        jPopupMenu1.add(mnuPopXoa);

        mnuPopRemoveAll.setText("jMenuItem1");
        mnuPopRemoveAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuPopRemoveAllActionPerformed(evt);
            }
        });
        jPopupMenu1.add(mnuPopRemoveAll);

        setBackground(new java.awt.Color(204, 204, 255));

        jPanel5.setBackground(new java.awt.Color(204, 204, 255));
        jPanel5.setOpaque(false);
        jPanel5.setPreferredSize(new java.awt.Dimension(959, 615));
        jPanel5.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        scroll1.setBorder(null);
        scroll1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        panelItem1.setBackground(new java.awt.Color(204, 204, 255));
        scroll1.setViewportView(panelItem1);

        jPanel5.add(scroll1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 70, 580, 480));

        jPanel6.setBackground(new java.awt.Color(104, 104, 248));

        jLabel13.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText("Tên sản phẩm");

        txtSearh.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSearhKeyReleased(evt);
            }
        });

        cboLoaiSP.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        cboLoaiSP.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel14.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setText("Loại sản phẩm");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtSearh, javax.swing.GroupLayout.PREFERRED_SIZE, 338, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13))
                .addGap(37, 37, 37)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cboLoaiSP, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14))
                .addContainerGap(454, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel13)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtSearh, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel14)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cboLoaiSP)))
                .addContainerGap())
        );

        jPanel5.add(jPanel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1040, 70));

        jPanel7.setBackground(new java.awt.Color(204, 204, 255));
        jPanel7.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tblHoaDon.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        tblHoaDon.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Tên SP", "Giá SP", "Số Lượng", "Tổng Tiền"
            }
        ));
        tblHoaDon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblHoaDonMouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tblHoaDonMouseReleased(evt);
            }
        });
        tblHoaDon.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tblHoaDonKeyReleased(evt);
            }
        });
        jScrollPane4.setViewportView(tblHoaDon);
        if (tblHoaDon.getColumnModel().getColumnCount() > 0) {
            tblHoaDon.getColumnModel().getColumn(0).setPreferredWidth(150);
            tblHoaDon.getColumnModel().getColumn(2).setPreferredWidth(38);
        }

        jPanel7.add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 6, 444, 206));

        jLabel16.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel16.setText("Tiền sản phẩm");
        jPanel7.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 218, -1, -1));

        txtTienSP.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                txtTienSPCaretUpdate(evt);
            }
        });
        jPanel7.add(txtTienSP, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 244, 193, 36));

        jLabel17.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel17.setText("Chi phí khác");
        jPanel7.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(247, 218, -1, -1));

        txtChiPhiKhac.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                txtChiPhiKhacCaretUpdate(evt);
            }
        });
        jPanel7.add(txtChiPhiKhac, new org.netbeans.lib.awtextra.AbsoluteConstraints(247, 244, 197, 36));

        jLabel18.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel18.setText("Tiền nhận*");
        jPanel7.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 292, -1, -1));

        txtTienNhan.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                txtTienNhanCaretUpdate(evt);
            }
        });
        jPanel7.add(txtTienNhan, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 318, 193, 36));

        jLabel19.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel19.setText("Tiền thừa");
        jPanel7.add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(247, 292, -1, -1));
        jPanel7.add(txtTienThua, new org.netbeans.lib.awtextra.AbsoluteConstraints(247, 318, 197, 36));

        jLabel20.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel20.setText("Phương thức thanh toán:");
        jPanel7.add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 370, -1, -1));

        rdoTienMat.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        rdoTienMat.setText("Tiền mặt");
        jPanel7.add(rdoTienMat, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 390, -1, -1));

        rdoChuyenKhoang.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        rdoChuyenKhoang.setText("Chuyển khoản");
        jPanel7.add(rdoChuyenKhoang, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 390, -1, -1));

        jLabel21.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel21.setText("Trạng thái");
        jPanel7.add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 370, -1, -1));

        lblTrangThai.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblTrangThai.setForeground(new java.awt.Color(255, 0, 51));
        lblTrangThai.setText("Đang xử lý");
        jPanel7.add(lblTrangThai, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 390, -1, -1));

        jLabel23.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel23.setText("Ghi chú:");
        jPanel7.add(jLabel23, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 464, -1, -1));

        txtGhiChu.setColumns(20);
        txtGhiChu.setRows(5);
        jScrollPane5.setViewportView(txtGhiChu);

        jPanel7.add(jScrollPane5, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 490, 438, 87));

        jButton6.setBackground(new java.awt.Color(255, 102, 102));
        jButton6.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButton6.setText("Hủy");
        jPanel7.add(jButton6, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 589, 96, 40));

        btnInHoaDon.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnInHoaDon.setText("In hóa đơn");
        btnInHoaDon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInHoaDonActionPerformed(evt);
            }
        });
        jPanel7.add(btnInHoaDon, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 589, -1, 40));

        btnThanhToan.setBackground(new java.awt.Color(0, 102, 204));
        btnThanhToan.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnThanhToan.setForeground(new java.awt.Color(255, 255, 255));
        btnThanhToan.setText("Thanh toán");
        btnThanhToan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThanhToanActionPerformed(evt);
            }
        });
        jPanel7.add(btnThanhToan, new org.netbeans.lib.awtextra.AbsoluteConstraints(297, 589, -1, 40));

        jLabel15.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel15.setText("Tổng tiền:");
        jPanel7.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 410, -1, -1));

        lblTongTien.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblTongTien.setText("100.000vnd");
        jPanel7.add(lblTongTien, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 440, -1, -1));

        lblThongBaoPhi.setForeground(new java.awt.Color(255, 51, 51));
        lblThongBaoPhi.setText("Thông báo");
        jPanel7.add(lblThongBaoPhi, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 216, 80, 30));

        lblThongBaoTienNhan.setFont(new java.awt.Font("Segoe UI", 2, 12)); // NOI18N
        lblThongBaoTienNhan.setForeground(new java.awt.Color(255, 51, 51));
        lblThongBaoTienNhan.setText("Thông báo");
        jPanel7.add(lblThongBaoTienNhan, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 300, 120, -1));

        jPanel5.add(jPanel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 70, 450, 650));

        tblHoaDonCho.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Người Tạo", "Thời Gian", "Tổng Tiền", "Trạng Thái", "Ghi Chú"
            }
        ));
        jScrollPane6.setViewportView(tblHoaDonCho);

        jLabel24.setBackground(new java.awt.Color(204, 204, 255));
        jLabel24.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel24.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel24.setText("Hóa Đơn Chờ");
        jLabel24.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 580, Short.MAX_VALUE)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addComponent(jLabel24, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel24, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel5.add(jPanel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 550, 580, 170));

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        jPanel5.add(jPanel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(990, 80, -1, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1040, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, 1040, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 720, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, 720, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnInHoaDonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInHoaDonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnInHoaDonActionPerformed

    private void tblHoaDonMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblHoaDonMouseReleased
        if (evt.isPopupTrigger()) {
            jPopupMenu1.show(evt.getComponent(), evt.getX(), evt.getY());
        }
    }//GEN-LAST:event_tblHoaDonMouseReleased

    private void mnuPopXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuPopXoaActionPerformed
        for (int rowsp : tblHoaDon.getSelectedRows()) {
            listrow.add(rowsp);
        }
        Collections.sort(listrow);
        int number = 0;
        while (true) {
            if (listrow.size() == 0) {
                break;
            }
            model.removeRow(listrow.get(listrow.size() - 1));
            listrow.remove(listrow.size() - 1);
        }
    }//GEN-LAST:event_mnuPopXoaActionPerformed

    private void mnuPopRemoveAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuPopRemoveAllActionPerformed
        while (model.getRowCount() > 0) {
            model.removeRow(0);
            listMaSP.clear();
            listGia.clear();
        }

    }//GEN-LAST:event_mnuPopRemoveAllActionPerformed

    private void tblHoaDonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblHoaDonMouseClicked


    }//GEN-LAST:event_tblHoaDonMouseClicked

    private void txtSearhKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearhKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSearhKeyReleased

    private void tblHoaDonKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tblHoaDonKeyReleased

    }//GEN-LAST:event_tblHoaDonKeyReleased

    private void txtChiPhiKhacCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_txtChiPhiKhacCaretUpdate
        try {
            double tongtien = 0;
            double tienThua = 0;
            double tienSP = Double.parseDouble(txtTienSP.getText());
            double phi = Double.parseDouble(txtChiPhiKhac.getText());
            double tienNhan = Double.parseDouble(txtTienNhan.getText());
            if (!txtChiPhiKhac.getText().isEmpty() && !txtTienNhan.getText().isEmpty()) {
                tienThua = tienNhan - (tienSP + phi);
                tongtien = tienSP + phi;
                txtTienThua.setText("" + tienThua);
                lblTongTien.setText(tongtien + " VNĐ");
                if (tienNhan < (phi + tienSP)) {
                    txtTienThua.setForeground(Color.red);
                    txtTienNhan.setForeground(Color.red);
                    lblThongBaoTienNhan.setText("(*)Chưa đủ tiền");
                    lblThongBaoTienNhan.setVisible(true);
                } else {
                    txtTienThua.setForeground(Color.black);
                    txtTienNhan.setForeground(Color.black);
                    lblThongBaoTienNhan.setVisible(false);
                }
            }
        } catch (Exception e) {
        }
    }//GEN-LAST:event_txtChiPhiKhacCaretUpdate

    private void txtTienNhanCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_txtTienNhanCaretUpdate

        try {
            double tongtien = 0;
            double tienThua = 0;
            double tienSP = Double.parseDouble(txtTienSP.getText());
            double phi = Double.parseDouble(txtChiPhiKhac.getText());
            double tienNhan = Double.parseDouble(txtTienNhan.getText());
            if (!txtChiPhiKhac.getText().isEmpty() && !txtTienNhan.getText().isEmpty()) {
                if (tienNhan < (phi + tienSP)) {
                    txtTienThua.setForeground(Color.red);
                    txtTienNhan.setForeground(Color.red);
                    lblThongBaoTienNhan.setText("(*)Chưa đủ tiền");
                    lblThongBaoTienNhan.setVisible(true);
                } else {
                    txtTienThua.setForeground(Color.black);
                    txtTienNhan.setForeground(Color.black);
                    lblThongBaoTienNhan.setVisible(false);
                }
                tongtien = tienSP + phi;
                lblTongTien.setText(tongtien + " VNĐ");
                tienThua = tienNhan - (tienSP + phi);
                txtTienThua.setText("" + tienThua);
            }

        } catch (Exception e) {
        }

    }//GEN-LAST:event_txtTienNhanCaretUpdate

    private void txtTienSPCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_txtTienSPCaretUpdate
        try {
            double tongtien = 0;
            double tienThua = 0;
            double tienSP = Double.parseDouble(txtTienSP.getText());
            double phi = Double.parseDouble(txtChiPhiKhac.getText());
            double tienNhan = Double.parseDouble(txtTienNhan.getText());
            if (!txtChiPhiKhac.getText().isEmpty() && !txtTienNhan.getText().isEmpty()) {
                tienThua = tienNhan - (tienSP + phi);
                txtTienThua.setText("" + tienThua);
                tongtien = tienSP + phi;
                lblTongTien.setText(tongtien + " VNĐ");
                if (tienNhan < (phi + tienSP)) {
                    txtTienThua.setForeground(Color.red);
                    txtTienNhan.setForeground(Color.red);
                    lblThongBaoTienNhan.setText("(*)Chưa đủ tiền");
                    lblThongBaoTienNhan.setVisible(true);
                } else {
                    txtTienThua.setForeground(Color.black);
                    txtTienNhan.setForeground(Color.black);
                    lblThongBaoTienNhan.setVisible(false);
                }
            }
        } catch (Exception e) {
        }
    }//GEN-LAST:event_txtTienSPCaretUpdate

    private void btnThanhToanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThanhToanActionPerformed
        getForm();
    }//GEN-LAST:event_btnThanhToanActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnInHoaDon;
    private javax.swing.JButton btnThanhToan;
    private javax.swing.JComboBox<String> cboLoaiSP;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JLabel lblThongBaoPhi;
    private javax.swing.JLabel lblThongBaoTienNhan;
    private javax.swing.JLabel lblTongTien;
    private javax.swing.JLabel lblTrangThai;
    private javax.swing.JMenuItem mnuPopRemoveAll;
    private javax.swing.JMenuItem mnuPopXoa;
    private com.swing.PanelItem panelItem1;
    private javax.swing.JRadioButton rdoChuyenKhoang;
    private javax.swing.JRadioButton rdoTienMat;
    private javax.swing.JScrollPane scroll1;
    private javax.swing.JTable tblHoaDon;
    private javax.swing.JTable tblHoaDonCho;
    private javax.swing.JTextField txtChiPhiKhac;
    private javax.swing.JTextArea txtGhiChu;
    private javax.swing.JTextField txtSearh;
    private javax.swing.JTextField txtTienNhan;
    private javax.swing.JTextField txtTienSP;
    private javax.swing.JTextField txtTienThua;
    // End of variables declaration//GEN-END:variables

    public void init() {
        fillToTableHoaDon();
        txtTienSP.setEditable(false);
        txtTienThua.setEditable(false);
        txtChiPhiKhac.setText("0");
        txtTienNhan.setText("0");
        txtTienSP.setText("0");
        lblTongTien.setText("0 ");
        txtTienThua.setText("0");
        lblThongBaoTienNhan.setVisible(false);
        lblThongBaoPhi.setVisible(false);
    }

    public void loadData() {
        listSP = SPDao.selectAll();
        mnuPopXoa.setText("Xóa sản phẩm");
        mnuPopRemoveAll.setText("Xóa tất cả");

        // Tạo một DefaultCellEditor để chứa JSpinner
    }

    public void testData() {

        setEvent(new EventItem() {
            @Override
            public void itemClick(Component com, SanPham item) {
//                if (itemSelected != null) {
//                    //        mainPanel.setImageOld(itemSelected.getImage());
//                }
//                if (itemSelected != item) {
                //         if (!animator.isRunning()) {
                itemSelected = item;
                //         animatePoint = getLocationOf(com);
//                    mainPanel.setImage(item.getImage());
//                    //        mainPanel.setImageLocation(animatePoint);
//                    mainPanel.setImageSize(new Dimension(180, 120));
//                    mainPanel.repaint();
                setSelected(com);
//                    JOptionPane.showMessageDialog(null, "" + item.getMaSP() + " " + item.getTenSP());
                if (checkSP(item)) {
                    fillToTable(item);
                }

                //home.showItem(item);
                //     animator.start();
                //    }
                //}
            }
        });
        for (SanPham sanPham : listSP) {
            addItem(new SanPham(sanPham.getMaSP(), sanPham.getTenSP(), sanPham.getHinh(), sanPham.getGia(), sanPham.getGhiChu(), sanPham.getLoaiSP(), sanPham.getKhuyenMai(), sanPham.isTrangThai()));
        }
    }

    public void fillToTable(SanPham sanPham) {
        model = (DefaultTableModel) tblHoaDon.getModel();

        try {
            Object[] row = {
                sanPham.getTenSP(),
                sanPham.getGia(),
                1,
                sanPham.getGia()
            };

            model.addTableModelListener(new TableModelListener() {
                @Override
                public void tableChanged(TableModelEvent e) {
                    if (tblHoaDon.getRowCount() == 0) {
                        taoHD = false;
                    } else {
                        if (taoHD == false && tblHoaDon.getRowCount() != 0) {
                            taoHD = true;
                            LocalDateTime currentDate2 = LocalDateTime.now();
                            ngayTaoHD = formatter.format(currentDate2);
                        }
                    }
                    double tongtien = 0;
                    for (int i = 0; i < tblHoaDon.getRowCount(); i++) {
                        double gia = (double) tblHoaDon.getValueAt(i, 3);
                        tongtien += gia;
                    }
                    txtTienSP.setText(String.valueOf(tongtien));

                }

            });

            listMaSP.add(sanPham.getMaSP());
            listGia.add(sanPham.getGia());
            model.addRow(row);
            tblHoaDon.getColumnModel().getColumn(2).setCellEditor((TableCellEditor) new SpinnerEditor());
            tblHoaDon.getColumnModel().getColumn(2).setCellRenderer(new SpinnerRenderer());
            tblHoaDon.setRowHeight(25);
        } catch (Exception e) {
            e.printStackTrace();

        }

    }

    class SpinnerEditor extends AbstractCellEditor implements TableCellEditor {

        public SpinnerEditor() {
            spinner = new JSpinner();
            spinner.setModel(new SpinnerNumberModel(1, 1, 100, 1));
            spinner.setBorder(null);
            spinner.addChangeListener(new ChangeListener() {

                @Override
                public void stateChanged(ChangeEvent e) {
                    row = tblHoaDon.getEditingRow();
                    if (row != -1) {
                        newValue = (int) spinner.getValue();
                        tblHoaDon.setValueAt(newValue, row, 2);
                        double tongTien = listGia.get(row) * newValue;
                        tblHoaDon.setValueAt(tongTien, row, 3);
                    }

                    fireEditingStopped();
                    repaint();
                }
            });
        }

        @Override
        public Object getCellEditorValue() {
            return spinner.getValue();
        }

        @Override
        public Component getTableCellEditorComponent(JTable table, Object value, boolean isSelected, int row, int column) {
            spinner.setValue(value);
            return spinner;
        }
    }

    class SpinnerRenderer extends JSpinner implements TableCellRenderer {

        public SpinnerRenderer() {
            setModel(new SpinnerNumberModel(1, 1, 100, 1));
        }

        @Override
        public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
            setValue(value);
            return this;
        }
    }

    public boolean checkSP(SanPham item) {
        for (int i = 0; i < listMaSP.size(); i++) {
            if (item.getMaSP().equals(listMaSP.get(i))) {
                if (item.getGia() != listGia.get(listGia.size() - 1)) {
                    listGia.add(item.getGia());
                }
                int currentValue = (int) tblHoaDon.getValueAt(i, 2);
                tblHoaDon.setValueAt((currentValue + 1), i, 2);
                double tongTien = item.getGia() * (currentValue + 1);
                tblHoaDon.setValueAt(tongTien, i, 3);
                return false;
            }
        }
        return true;
    }

    public void fillToTableHoaDon() {
        modelHD = (DefaultTableModel) tblHoaDonCho.getModel();
        modelHD.setRowCount(0);
        listHD = hddao.selectAll();
        for (HoaDon hoaDon : listHD) {
            if (hoaDon.getTrangThai().equals("Đang chờ")) {
                Object[] row2 = {
                    hoaDon.getTenNguoiTao(),
                    hoaDon.getThoiGianTao(),
                    hoaDon.getTongTien(),
                    hoaDon.getTrangThai(),
                    hoaDon.getGhiChu()
                };
                modelHD.addRow(row2);
            }

        }

    }

    HoaDon getForm() {
        HoaDon modelGF = new HoaDon();
        listHD = hddao.selectAll();
        if (listHD.size() == 0) {
            modelGF.setMaHD("HD1");
        } else {
            String mahd = listHD.get(listHD.size() - 1).getMaHD();
            mahd = mahd.substring(2);
            int mahdint = Integer.parseInt(mahd);
            mahdint += 1;
            mahd = String.valueOf("HD" + mahdint);
            modelGF.setMaHD(mahd);
        }
        LocalDateTime currentDate = LocalDateTime.now();
        String ngayCT = formatter.format(currentDate);
        LocalDateTime parsedDate = LocalDateTime.parse(ngayCT, formatter);
        Date ngayTao = convertLocalDateTimeToDate(parsedDate);
        LocalDateTime parsedDate2 = LocalDateTime.parse(ngayTaoHD, formatter);
        Date ngayTao2 = convertLocalDateTimeToDate(parsedDate2);
        modelGF.setThoiGianTao(ngayTao2);
        modelGF.setThoiGianThanhToan(ngayTao);
        System.out.println("thoi gian tao HD: " + ngayTao2);
        System.out.println("thoi gian thanh toán: " + ngayTao);
        return modelGF;
    }

    private static Date convertLocalDateTimeToDate(LocalDateTime localDateTime) {
        return java.sql.Timestamp.valueOf(localDateTime);
    }

}
